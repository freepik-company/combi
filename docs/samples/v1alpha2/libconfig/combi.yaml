# combi configuration file
kind: libconfig
global:
  source:
    type: raw
    rawConfig: |
      array_test=
      [
        "item1", "item2", "item3",
      ]

      int32field=2
      int64field=500L

      mysql_variables=
      {
        threads=2
        max_connections=500
      }

      mysql_servers =
      (
        { address="127.0.0.1" , port=3306 , hostgroup=0 , max_connections=1000, weight=1 },
        { address="127.0.0.2" , port=3306 , hostgroup=1 , max_connections=1000, weight=1 },
      )

      mysql_users:
      (
        { username = "writer" , password = "pass" , default_hostgroup = 0 , active = 1 },
        { username = "reader" , password = "pass" , default_hostgroup = 1 , active = 1 },
      )

  conditions:
    mandatory: []
    optional: []
  actions:
    onSuccess: []
    onFailure: []
config:
  mergedConfig: ./docs/samples/v1alpha2/libconfig/merged.cnf
  source:
    type: raw
    git:
      sshUrl: "git@github.com:freepik-company/combi.git"
      sshKeyFilepath: "/path/to/private_key"
      branch: "main"
      filepath: "docs/samples/v1alpha2/libconfig/source.cnf"
    rawConfig: |
      datadir="/var/lib/proxysql"

      admin_variables=
      {
        admin_credentials="admin:admin;radmin:radmin"
        mysql_ifaces="0.0.0.0:6032"
      }

  conditions:
    mandatory: []
    optional: []
  #   mandatory:
  #   - name: "search primitive value to check condition"
  #     template: |
  #       {{- $config := . -}}
  #       {{- printf "%s" $config.int64field -}}
  #     value: "500L"
  #   - name: "search group value to check condition"
  #     template: |
  #       {{- $config := . -}}
  #       {{- printf "%s" $config.mysql_variables.threads -}}
  #     value: "2"
  #   - name: "search list value to check condition"
  #     template: |
  #       {{- $config := . -}}
  #         {{- range $i, $v := $config.mysql_servers -}}
  #             {{- if (eq $v.hostgroup "0" ) -}}
  #               {{- printf "%s" $v.max_connections -}}
  #             {{- end -}}
  #         {{- end -}}
  #     value: "1000"
  #   - name: "search env variable to check condition"
  #     template: |
  #       {{- printf "%s" (env "MANDATORY_ENV_VAR") -}}
  #     value: "true"
  #   optional:
  #   - name: "print array values condition"
  #     template: |
  #       {{- $config := . -}}
  #       {{- range $k, $v := $config.array_test -}}
  #         [{{- printf "%v" $k -}}] => {{- printf "%v, " $v -}}
  #       {{- end -}}
  #     value: ""

  actions:
    onSuccess:
    - name: "execute success message config action"
      command:
      - echo
      - -e
      - "success in config for you\n"
      script: ""
    onFailure:
    - name: "execute success message config action"
      command:
      - echo
      - -e
      - "fail in config for you\n"
      script: ""
